# Generated by Django 4.2.1 on 2023-05-13 07:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('GamePediaApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Battle Royale', 'Battle Royale'), ("Beat 'em up", "Beat 'em up"), ('Board game', 'Board game'), ('Co-Op', 'Co-Op'), ('Competitive', 'Competitive'), ('Educational', 'Educational'), ('Esports', 'Esports'), ('FPS', 'FPS'), ('Fighting', 'Fighting'), ('Horror', 'Horror'), ('Interactive movie', 'Interactive movie'), ('MMO', 'MMO'), ('Metroidvania', 'Metroidvania'), ('Multiplayer', 'Multiplayer'), ('Party', 'Party'), ('Platform', 'Platform'), ('Puzzles', 'Puzzles'), ('RPG', 'RPG'), ('Racing', 'Racing'), ('Rhythm', 'Rhythm'), ('Roguelikes', 'Roguelikes'), ('Sandbox', 'Sandbox'), ('Shooter', 'Shooter'), ('Simulation', 'Simulation'), ('Sports', 'Sports'), ('Stealth', 'Stealth'), ('Strategy', 'Strategy'), ('Survival', 'Survival'), ('Survival ', 'Survival '), ('Tactical', 'Tactical'), ('Text Based', 'Text Based'), ('Third Person Shooting', 'Third Person Shooting'), ('Tower defense', 'Tower defense'), ('Turn-based', 'Turn-based'), ('Visual novel', 'Visual novel'), ('open world', 'open world')], max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('review', models.CharField(blank=True, max_length=2064)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('poster', models.CharField(max_length=1000)),
                ('description', models.CharField(max_length=4096)),
                ('relasedate', models.DateField()),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='GamePediaApp.developer')),
                ('genres', models.ManyToManyField(related_name='genres', to='GamePediaApp.genre')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='GamePediaApp.publisher')),
                ('ratings', models.ManyToManyField(blank=True, related_name='ratings', to='GamePediaApp.rating')),
            ],
        ),
    ]
